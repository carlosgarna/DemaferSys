<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>